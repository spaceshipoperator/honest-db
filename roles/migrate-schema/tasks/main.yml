---
- name: install packages
  become: yes
  package:
    name:
      - sqitch
    state: present
  tags: packages

- name: create a directory if it does not exist
  become: yes
  ansible.builtin.file:
    path: "{{ migrate_schema_dir }}"
    state: directory
    mode: '0755'
  tags: deploy

- name: copy all schema migration files
  become: yes
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: postgres
    group: postgres
  with_items:
    - { src: 'deploy', dest: "{{ migrate_schema_dir }}"  }
    - { src: 'revert', dest: "{{ migrate_schema_dir }}" }
    - { src: 'verify', dest: "{{ migrate_schema_dir }}" }
    - { src: 'sqitch.plan', dest: "{{ migrate_schema_dir }}" }
    - { src: 'sqitch.conf', dest: "{{ migrate_schema_dir }}" }
  tags:
    - deploy
    - revert_schema
    - upgrade_schema

- name: revert all schema migrations for each subscriber db (_s)
  become: yes
  become_user: postgres
  command:
    chdir: "{{ migrate_schema_dir }}"
    cmd: "sqitch revert -y db:pg:{{ item[-2:] }}_s"
  when: "{{ item != ansible_hostname }}"
  with_items:
    - "{{ groups['database'] }}"
  tags: revert_schema

- name: deploy schema migrations for each subscriber db (_s)
  become: yes
  become_user: postgres
  command:
    chdir: "{{ migrate_schema_dir }}"
    cmd: "sqitch deploy --verify db:pg:{{ item[-2:] }}_s"
  when: "{{ item != ansible_hostname }}"
  with_items:
    - "{{ groups['database'] }}"
  tags: deploy

- name: upgrade schema migrations for each subscriber db (_s)
  become: yes
  become_user: postgres
  command:
    chdir: "{{ migrate_schema_dir }}"
    cmd: "sqitch upgrade db:pg:{{ item[-2:] }}_s"
  when: "{{ item != ansible_hostname }}"
  with_items:
    - "{{ groups['database'] }}"
  tags: upgrade_schema

- name: revert all schema migrations for local publisher db (_p)
  become: yes
  become_user: postgres
  command:
    chdir: "{{ migrate_schema_dir }}"
    cmd: "sqitch revert -y db:pg:{{ local_db_prefix }}_p"
  tags: revert_schema

- name: deploy schema migrations for local publisher db (_p)
  become: yes
  become_user: postgres
  command:
    chdir: "{{ migrate_schema_dir }}"
    cmd: "sqitch deploy --verify db:pg:{{ local_db_prefix }}_p"
  tags: deploy

- name: upgrade schema migrations for local publisher db (_p)
  become: yes
  become_user: postgres
  command:
    chdir: "{{ migrate_schema_dir }}"
    cmd: "sqitch upgrade db:pg:{{ local_db_prefix }}_p"
  tags: upgrade_schema
